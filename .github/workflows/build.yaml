name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: Android
            os: ubuntu-latest
            command: flutter build apk --split-per-abi --obfuscate --split-debug-info=build
            output: build/app/outputs/flutter-apk/
          - platform: Linux
            os: ubuntu-latest
            command: flutter build linux --obfuscate --split-debug-info=build
            output: build/linux/x64/release/bundle/
          - platform: Web
            os: ubuntu-latest
            command: flutter build web
            output: build/web/
          - platform: Windows
            os: windows-latest
            command: flutter build windows --obfuscate --split-debug-info=build
            output: build/windows/x64/runner/Release/

    name: Build ${{ matrix.platform }} app
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - if: matrix.platform == 'Android'
        name: Set up Android cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.android/build-cache
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up Flutter with cache
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - if: matrix.platform == 'Linux'
        name: Install Linux dependencies
        run: |
          sudo apt install ninja-build libgtk-3-0 libgtk-3-dev libblkid1 liblzma5 -y

      - name: Get Flutter dependencies
        run: flutter pub get

      - if: matrix.platform == 'Android'
        name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '19'

      - if: matrix.platform == 'Android'
        name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - if: matrix.platform == 'Android'
        name: Configure Android signing
        shell: bash
        run: |
          if [ "${{ secrets.KEY }}" != "" ]; then
            cd android/app
            echo ${{ secrets.KEY }} | base64 --decode > key.jks
          fi

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Pre-build
        run: |
          pip install PyYAML
          python scripts/pre-build.py hello

      - name: Build ${{ matrix.platform }} app
        run: ${{ matrix.command }} -v

      - name: Archive ${{ matrix.platform }} app
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-app
          path: ${{ matrix.output }}

      - if: matrix.platform == 'Web'
        name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ matrix.output }}

  deploy:
    name: Deploy to GitHub Pages
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    needs:
      - build

    permissions:
      pages: write
      id-token: write

    environment:
      name: Web App
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
